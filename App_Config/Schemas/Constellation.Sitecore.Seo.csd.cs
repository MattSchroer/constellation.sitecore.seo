//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Constellation.Sitecore.App_Config.Schemas
{
    
    
    /// <summary>
    /// The SitemapXmlHandler Configuration Section.
    /// </summary>
    public partial class SitemapXmlHandler : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the SitemapXmlHandler Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SitemapXmlHandlerSectionName = "sitemapXmlHandler";
        
        /// <summary>
        /// Gets the SitemapXmlHandler instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public static global::Constellation.Sitecore.App_Config.Schemas.SitemapXmlHandler Instance
        {
            get
            {
                return ((global::Constellation.Sitecore.App_Config.Schemas.SitemapXmlHandler)(global::System.Configuration.ConfigurationManager.GetSection(global::Constellation.Sitecore.App_Config.Schemas.SitemapXmlHandler.SitemapXmlHandlerSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.App_Config.Schemas.SitemapXmlHandler.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.App_Config.Schemas.SitemapXmlHandler.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region SitemapNodeType Property
        /// <summary>
        /// The XML name of the <see cref="SitemapNodeType"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SitemapNodeTypePropertyName = "sitemapNodeType";
        
        /// <summary>
        /// Gets or sets the SitemapNodeType.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The SitemapNodeType.")]
        [global::System.ComponentModel.TypeConverter(typeof(global::System.Configuration.TypeNameConverter))]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.App_Config.Schemas.SitemapXmlHandler.SitemapNodeTypePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=Constellation.Sitecore.HttpHandlers.SitemapXml.DefaultSitemapNode, Constellation.Sitecore.Seo)]
        public virtual global::System.Type SitemapNodeType
        {
            get
            {
                return ((global::System.Type)(base[global::Constellation.Sitecore.App_Config.Schemas.SitemapXmlHandler.SitemapNodeTypePropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.App_Config.Schemas.SitemapXmlHandler.SitemapNodeTypePropertyName] = value;
            }
        }
        #endregion
        
        #region CrawlerType Property
        /// <summary>
        /// The XML name of the <see cref="CrawlerType"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string CrawlerTypePropertyName = "crawlerType";
        
        /// <summary>
        /// Gets or sets the CrawlerType.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The CrawlerType.")]
        [global::System.ComponentModel.TypeConverter(typeof(global::System.Configuration.TypeNameConverter))]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.App_Config.Schemas.SitemapXmlHandler.CrawlerTypePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=Constellation.Sitecore.HttpHandlers.SitemapXml.DefaultCrawler, Constellation.Sitecore.Seo)]
        public virtual global::System.Type CrawlerType
        {
            get
            {
                return ((global::System.Type)(base[global::Constellation.Sitecore.App_Config.Schemas.SitemapXmlHandler.CrawlerTypePropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.App_Config.Schemas.SitemapXmlHandler.CrawlerTypePropertyName] = value;
            }
        }
        #endregion
        
        #region CacheTimeoutMinutes Property
        /// <summary>
        /// The XML name of the <see cref="CacheTimeoutMinutes"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string CacheTimeoutMinutesPropertyName = "cacheTimeoutMinutes";
        
        /// <summary>
        /// Gets or sets the CacheTimeoutMinutes.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The CacheTimeoutMinutes.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.App_Config.Schemas.SitemapXmlHandler.CacheTimeoutMinutesPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=30)]
        public virtual int CacheTimeoutMinutes
        {
            get
            {
                return ((int)(base[global::Constellation.Sitecore.App_Config.Schemas.SitemapXmlHandler.CacheTimeoutMinutesPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.App_Config.Schemas.SitemapXmlHandler.CacheTimeoutMinutesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Constellation.Sitecore.App_Config.Schemas
{
    
    
    /// <summary>
    /// The RobotsTxtHandler Configuration Section.
    /// </summary>
    public partial class RobotsTxtHandler : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the RobotsTxtHandler Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string RobotsTxtHandlerSectionName = "robotsTxtHandler";
        
        /// <summary>
        /// Gets the RobotsTxtHandler instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public static global::Constellation.Sitecore.App_Config.Schemas.RobotsTxtHandler Instance
        {
            get
            {
                return ((global::Constellation.Sitecore.App_Config.Schemas.RobotsTxtHandler)(global::System.Configuration.ConfigurationManager.GetSection(global::Constellation.Sitecore.App_Config.Schemas.RobotsTxtHandler.RobotsTxtHandlerSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.App_Config.Schemas.RobotsTxtHandler.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.App_Config.Schemas.RobotsTxtHandler.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Allowed Property
        /// <summary>
        /// The XML name of the <see cref="Allowed"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AllowedPropertyName = "allowed";
        
        /// <summary>
        /// Gets or sets the Allowed.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Allowed.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.App_Config.Schemas.RobotsTxtHandler.AllowedPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=true)]
        public virtual bool Allowed
        {
            get
            {
                return ((bool)(base[global::Constellation.Sitecore.App_Config.Schemas.RobotsTxtHandler.AllowedPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.App_Config.Schemas.RobotsTxtHandler.AllowedPropertyName] = value;
            }
        }
        #endregion
        
        #region RobotRules Property
        /// <summary>
        /// The XML name of the <see cref="RobotRules"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string RobotRulesPropertyName = "robotRules";
        
        /// <summary>
        /// Gets or sets the RobotRules.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The RobotRules.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.App_Config.Schemas.RobotsTxtHandler.RobotRulesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=true)]
        public virtual global::Constellation.Sitecore.App_Config.Schemas.RobotRules RobotRules
        {
            get
            {
                return ((global::Constellation.Sitecore.App_Config.Schemas.RobotRules)(base[global::Constellation.Sitecore.App_Config.Schemas.RobotsTxtHandler.RobotRulesPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.App_Config.Schemas.RobotsTxtHandler.RobotRulesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Constellation.Sitecore.App_Config.Schemas
{
    
    
    /// <summary>
    /// A collection of RobotRule instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Constellation.Sitecore.App_Config.Schemas.RobotRule), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Constellation.Sitecore.App_Config.Schemas.RobotRules.RobotRulePropertyName)]
    public partial class RobotRules : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Constellation.Sitecore.App_Config.Schemas.RobotRule"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string RobotRulePropertyName = "robotRule";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::Constellation.Sitecore.App_Config.Schemas.RobotRules.RobotRulePropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Constellation.Sitecore.App_Config.Schemas.RobotRules.RobotRulePropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Constellation.Sitecore.App_Config.Schemas.RobotRule)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Constellation.Sitecore.App_Config.Schemas.RobotRule"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Constellation.Sitecore.App_Config.Schemas.RobotRule"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Constellation.Sitecore.App_Config.Schemas.RobotRule();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.App_Config.Schemas.RobotRule"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Constellation.Sitecore.App_Config.Schemas.RobotRule"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.App_Config.Schemas.RobotRule this[int index]
        {
            get
            {
                return ((global::Constellation.Sitecore.App_Config.Schemas.RobotRule)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.App_Config.Schemas.RobotRule"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Constellation.Sitecore.App_Config.Schemas.RobotRule"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.App_Config.Schemas.RobotRule this[object name]
        {
            get
            {
                return ((global::Constellation.Sitecore.App_Config.Schemas.RobotRule)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Constellation.Sitecore.App_Config.Schemas.RobotRule"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="robotRule">The <see cref="global::Constellation.Sitecore.App_Config.Schemas.RobotRule"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::Constellation.Sitecore.App_Config.Schemas.RobotRule robotRule)
        {
            base.BaseAdd(robotRule);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Constellation.Sitecore.App_Config.Schemas.RobotRule"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="robotRule">The <see cref="global::Constellation.Sitecore.App_Config.Schemas.RobotRule"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::Constellation.Sitecore.App_Config.Schemas.RobotRule robotRule)
        {
            base.BaseRemove(this.GetElementKey(robotRule));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.App_Config.Schemas.RobotRule"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Constellation.Sitecore.App_Config.Schemas.RobotRule"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.App_Config.Schemas.RobotRule GetItemAt(int index)
        {
            return ((global::Constellation.Sitecore.App_Config.Schemas.RobotRule)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.App_Config.Schemas.RobotRule"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Constellation.Sitecore.App_Config.Schemas.RobotRule"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.App_Config.Schemas.RobotRule GetItemByKey(string name)
        {
            return ((global::Constellation.Sitecore.App_Config.Schemas.RobotRule)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Constellation.Sitecore.App_Config.Schemas
{
    
    
    /// <summary>
    /// The RobotRule Configuration Element.
    /// </summary>
    public partial class RobotRule : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.App_Config.Schemas.RobotRule.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.App_Config.Schemas.RobotRule.NamePropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.App_Config.Schemas.RobotRule.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Allowed Property
        /// <summary>
        /// The XML name of the <see cref="Allowed"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AllowedPropertyName = "allowed";
        
        /// <summary>
        /// Gets or sets the Allowed.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Allowed.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.App_Config.Schemas.RobotRule.AllowedPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual bool Allowed
        {
            get
            {
                return ((bool)(base[global::Constellation.Sitecore.App_Config.Schemas.RobotRule.AllowedPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.App_Config.Schemas.RobotRule.AllowedPropertyName] = value;
            }
        }
        #endregion
    }
}
